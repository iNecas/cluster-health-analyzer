# creats a 1 pod deployment for the cluster-health-analyzer
# kube-rbac-proxy sidecar is used to authenticate prometheus requests to scrape metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cluster-health-analyzer
  name: cluster-health-analyzer
  namespace: openshift-cluster-health-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-health-analyzer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-health-analyzer
    spec:
      serviceAccountName: cluster-health-analyzer-thanos-querier
      automountServiceAccountToken: true
      containers:
      - name: cluster-health-analyzer
        image: "quay.io/openshiftanalytics/cluster-health-analyzer:latest"
        imagePullPolicy: Always
        command:
          - "cluster-health-analyzer"
          - "serve"
        env:
          - name: PROM_URL
            value: "https://thanos-querier.openshift-monitoring.svc.cluster.local:9091/"
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --client-ca-file=/etc/tls/client/client-ca.crt
        - --logtostderr=true
        - --allow-paths=/metrics
        image: quay.io/openshift/origin-kube-rbac-proxy:4.18.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: metrics
        resources:
          requests:
            cpu: 1m
            memory: 15Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy-metric
          readOnly: true
        - mountPath: /etc/tls/private
          name: secret-kube-rbac-proxy-tls
          readOnly: true
        - mountPath: /etc/tls/client
          name: metrics-client-ca
          readOnly: true
      volumes:
      - name: secret-kube-rbac-proxy-tls
        secret:
          secretName: kube-rbac-proxy-tls
      - name: secret-kube-rbac-proxy-metric
        secret:
          secretName: secret-kube-rbac-proxy-metric
      - name: metrics-client-ca
        configMap:
          name: metrics-client-ca
